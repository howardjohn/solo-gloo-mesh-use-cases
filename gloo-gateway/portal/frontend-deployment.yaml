apiVersion: v1
kind: ServiceAccount
metadata:
  name: portal-frontend
  namespace: gloo-mesh-addons
---
apiVersion: v1
kind: Service
metadata:
  name: portal-frontend
  namespace: gloo-mesh-addons
  labels:
    app: portal-frontend
    service: portal-frontend
spec:
  ports:
    - name: http
      port: 4000
      targetPort: 4000
  selector:
    app: portal-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal-frontend
  namespace: gloo-mesh-addons
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portal-frontend
  template:
    metadata:
      labels:
        app: portal-frontend
    spec:
      serviceAccountName: portal-frontend
      containers:
        - image: gcr.io/solo-public/docs/portal-frontend:v0.0.13
          args: ["--host", "0.0.0.0"]
          env:
            # The URL of the Gloo Platform Portal REST server.
            # This URL matches the host in the route table for the gloo-mesh-portal-server.
            # Format this variable as: "<portal-server-url>/v1".
            - name: VITE_PORTAL_SERVER_URL
              value: $PORTAL_URL
            # The OAuth identity provider's Client ID.
            # In Keycloak, open the $KEYCLOAK_URL UI, click Clients, and from the Settings tab, find the Client ID.
            # In Okta, open your $OKTA_URL and from the Applications section, find your app's Client ID.
            - name: VITE_CLIENT_ID
              value: $CLIENT_ID
            #
            # In Okta or Keycloak, you can find the following endpoints
            # the well-known OpenID config path for your authorization server, such as:
            # $KEYCLOAK_URL/auth/realms/<your-realm>/.well-known/openid-configuration
            # $OKTA_URL/oauth2/default/.well-known/openid-configuration
            #
            # The `token_endpoint` is where to get the OAuth token.
            - name: VITE_TOKEN_ENDPOINT
              value: $TOKEN_ENDPOINT
            # The `authorization_endpoint` is where to get the PKCE authorization code.
            - name: VITE_AUTH_ENDPOINT
              value: $AUTH_ENDPOINT
            # The `end_session_endpoint` is where to end the session.
            - name: VITE_LOGOUT_ENDPOINT
              value: $LOGOUT_ENDPOINT
          imagePullPolicy: Always
          name: portal-frontend
          ports:
            - containerPort: 4000