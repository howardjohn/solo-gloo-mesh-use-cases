adminNamespace: ""
devMode: false
insecure: false
leaderElection: true
legacyMode: false
licenseKey: ""
mgmtClusterName: $MGMT_CLUSTER
prometheus:
  alertmanager:
    enabled: false
  enabled: true
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  podSecurityPolicy:
    enabled: false
  pushgateway:
    enabled: false
  rbac:
    create: true
  server:
    fullnameOverride: prometheus-server
    persistentVolume:
      enabled: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
      - job_name: gloo-mesh
        scrape_interval: 15s
        scrape_timeout: 10s
        static_configs:
        - targets:
          - gloo-mesh-mgmt-server-ui.gloo-mesh:9091
  serviceAccounts:
    alertmanager:
      create: false
    nodeExporter:
      create: false
    pushgateway:
      create: false
    server:
      create: true
prometheusUrl: http://prometheus-server
verbose: false


glooMeshMgmtServer:
  enabled: true
  env:
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: LICENSE_KEY
    valueFrom:
      secretKeyRef:
        key: key
        name: gloo-mesh-enterprise-license
  floatingUserId: false
  image:
    pullPolicy: IfNotPresent
    registry: gcr.io/gloo-mesh
    repository: gloo-mesh-mgmt-server
    tag: $GLOO_MESH_VERSION
  ports:
    grpc: 9900
    grpcUI: 11100
    healthcheck: 8090
    stats: 9091
  resources:
    requests:
      cpu: 125m
      memory: 256Mi
  runAsUser: 10101
  serviceType: LoadBalancer
  sidecars: {}
  maxGrpcMessageSize: "4294967295"
  relay:
    disableCa: false
    disableCaCertGeneration: false
    pushRbac: true
    signingTlsSecret:
      name: relay-tls-signing-secret
    tlsSecret:
      name: relay-server-tls-secret
    tokenSecret:
      key: token
      name: relay-identity-token-secret
      namespace: ""
glooMeshUi:
  enabled: true
  env:
  - name: POD_NAMESPACE
    valueFrom:
      fieldRef:
        fieldPath: metadata.namespace
  - name: LICENSE_KEY
    valueFrom:
      secretKeyRef:
        key: key
        name: gloo-mesh-enterprise-license
  floatingUserId: false
  image:
    pullPolicy: IfNotPresent
    registry: gcr.io/gloo-mesh
    repository: gloo-mesh-apiserver
    tag: $GLOO_MESH_VERSION
  ports:
    console: 8090
    grpc: 10101
    healthcheck: 8081
  resources:
    requests:
      cpu: 125m
      memory: 256Mi
  runAsUser: 10101
  serviceType: ClusterIP
  sidecars:
    console:
      env: null
      image:
        pullPolicy: IfNotPresent
        registry: gcr.io/gloo-mesh
        repository: gloo-mesh-ui
        tag: $GLOO_MESH_VERSION
      resources:
        requests:
          cpu: 125m
          memory: 256Mi
    envoy:
      env:
      - name: ENVOY_UID
        value: "0"
      image:
        pullPolicy: IfNotPresent
        registry: gcr.io/gloo-mesh
        repository: gloo-mesh-envoy
        tag: $GLOO_MESH_VERSION
      resources:
        requests:
          cpu: 500m
          memory: 256Mi
  auth:
    backend: ""
    enabled: false
    oidc:
      appUrl: ""
      clientId: ""
      clientSecret: ""
      clientSecretName: ""
      issuerUrl: ""
      session:
        backend: ""
        redis:
          host: ""
  mgmtServerUIAddress: gloo-mesh-mgmt-server-ui.gloo-mesh.svc.cluster.local:11100
  relayClientAuthority: gloo-mesh-mgmt-server.gloo-mesh
  settingsName: settings
glooMeshRedis:
  enabled: true
  env:
  - name: MASTER
    value: "true"
  floatingUserId: false
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: redis
    tag: 6.2.6
  ports:
    redis: 6379
  resources:
    requests:
      cpu: 125m
      memory: 256Mi
  runAsUser: 10101
  serviceType: ClusterIP
  sidecars: {}
  addr: ""

